/*
 * Altinn.AccessManagement
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;

namespace Altinn.AccessManagement.UI.Integrations.AccessManagement.Models
{
    /// <summary>
    /// Defines DetailCodeExternal
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum AccessManagementDetailCodeExternalModel
    {
        /// <summary>
        /// Enum Unknown for value: Unknown
        /// </summary>
        [EnumMember(Value = "Unknown")]
        Unknown,

        /// <summary>
        /// Enum RoleAccess for value: RoleAccess
        /// </summary>
        [EnumMember(Value = "RoleAccess")]
        RoleAccess,

        /// <summary>
        /// Enum DelegationAccess for value: DelegationAccess
        /// </summary>
        [EnumMember(Value = "DelegationAccess")]
        DelegationAccess,

        /// <summary>
        /// Enum SrrRightAccess for value: SrrRightAccess
        /// </summary>
        [EnumMember(Value = "SrrRightAccess")]
        SrrRightAccess,

        /// <summary>
        /// Enum MissingRoleAccess for value: MissingRoleAccess
        /// </summary>
        [EnumMember(Value = "MissingRoleAccess")]
        MissingRoleAccess,

        /// <summary>
        /// Enum MissingDelegationAccess for value: MissingDelegationAccess
        /// </summary>
        [EnumMember(Value = "MissingDelegationAccess")]
        MissingDelegationAccess,

        /// <summary>
        /// Enum MissingSrrRightAccess for value: MissingSrrRightAccess
        /// </summary>
        [EnumMember(Value = "MissingSrrRightAccess")]
        MissingSrrRightAccess,

        /// <summary>
        /// Enum InsufficientAuthenticationLevel for value: InsufficientAuthenticationLevel
        /// </summary>
        [EnumMember(Value = "InsufficientAuthenticationLevel")]
        InsufficientAuthenticationLevel
    }

}
