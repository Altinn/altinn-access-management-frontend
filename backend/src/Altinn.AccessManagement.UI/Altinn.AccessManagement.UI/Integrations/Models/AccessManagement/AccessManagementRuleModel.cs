/*
 * Altinn.AccessManagement
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;

namespace Altinn.AccessManagement.UI.Integrations.AccessManagement.Models
{
    /// <summary>
    /// AccessManagementRuleModel
    /// </summary>
    [DataContract(Name = "Rule")]
    public partial class AccessManagementRuleModel : IValidatableObject
    {

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public AccessManagementRuleTypeModel? Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="AccessManagementRuleModel" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AccessManagementRuleModel() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AccessManagementRuleModel" /> class.
        /// </summary>
        /// <param name="ruleId">ruleId.</param>
        /// <param name="type">type.</param>
        /// <param name="createdSuccessfully">createdSuccessfully.</param>
        /// <param name="delegatedByUserId">delegatedByUserId.</param>
        /// <param name="delegatedByPartyId">delegatedByPartyId.</param>
        /// <param name="delegatedDateTime">delegatedDateTime.</param>
        /// <param name="offeredByPartyId">offeredByPartyId (required).</param>
        /// <param name="coveredBy">coveredBy (required).</param>
        /// <param name="resource">resource (required).</param>
        /// <param name="action">action (required).</param>
        public AccessManagementRuleModel(string ruleId = default(string), AccessManagementRuleTypeModel? type = default(AccessManagementRuleTypeModel?), bool createdSuccessfully = default(bool), int? delegatedByUserId = default(int?), int? delegatedByPartyId = default(int?), DateTime? delegatedDateTime = default(DateTime?), int offeredByPartyId = default(int), List<AccessManagementAttributeMatchModel> coveredBy = default(List<AccessManagementAttributeMatchModel>), List<AccessManagementAttributeMatchModel> resource = default(List<AccessManagementAttributeMatchModel>), AccessManagementAttributeMatchModel action = default(AccessManagementAttributeMatchModel))
        {
            this.OfferedByPartyId = offeredByPartyId;
            // to ensure "coveredBy" is required (not null)
            if (coveredBy == null)
            {
                throw new ArgumentNullException("coveredBy is a required property for AccessManagementRuleModel and cannot be null");
            }
            this.CoveredBy = coveredBy;
            // to ensure "resource" is required (not null)
            if (resource == null)
            {
                throw new ArgumentNullException("resource is a required property for AccessManagementRuleModel and cannot be null");
            }
            this.Resource = resource;
            // to ensure "action" is required (not null)
            if (action == null)
            {
                throw new ArgumentNullException("action is a required property for AccessManagementRuleModel and cannot be null");
            }
            this.Action = action;
            this.RuleId = ruleId;
            this.Type = type;
            this.CreatedSuccessfully = createdSuccessfully;
            this.DelegatedByUserId = delegatedByUserId;
            this.DelegatedByPartyId = delegatedByPartyId;
            this.DelegatedDateTime = delegatedDateTime;
        }

        /// <summary>
        /// Gets or Sets RuleId
        /// </summary>
        [DataMember(Name = "ruleId", EmitDefaultValue = true)]
        public string RuleId { get; set; }

        /// <summary>
        /// Gets or Sets CreatedSuccessfully
        /// </summary>
        [DataMember(Name = "createdSuccessfully", EmitDefaultValue = true)]
        public bool CreatedSuccessfully { get; set; }

        /// <summary>
        /// Gets or Sets DelegatedByUserId
        /// </summary>
        [DataMember(Name = "delegatedByUserId", EmitDefaultValue = true)]
        public int? DelegatedByUserId { get; set; }

        /// <summary>
        /// Gets or Sets DelegatedByPartyId
        /// </summary>
        [DataMember(Name = "delegatedByPartyId", EmitDefaultValue = true)]
        public int? DelegatedByPartyId { get; set; }

        /// <summary>
        /// Gets or Sets DelegatedDateTime
        /// </summary>
        [DataMember(Name = "delegatedDateTime", EmitDefaultValue = true)]
        public DateTime? DelegatedDateTime { get; set; }

        /// <summary>
        /// Gets or Sets OfferedByPartyId
        /// </summary>
        [DataMember(Name = "offeredByPartyId", IsRequired = true, EmitDefaultValue = true)]
        public int OfferedByPartyId { get; set; }

        /// <summary>
        /// Gets or Sets CoveredBy
        /// </summary>
        [DataMember(Name = "coveredBy", IsRequired = true, EmitDefaultValue = true)]
        public List<AccessManagementAttributeMatchModel> CoveredBy { get; set; }

        /// <summary>
        /// Gets or Sets Resource
        /// </summary>
        [DataMember(Name = "resource", IsRequired = true, EmitDefaultValue = true)]
        public List<AccessManagementAttributeMatchModel> Resource { get; set; }

        /// <summary>
        /// Gets or Sets Action
        /// </summary>
        [DataMember(Name = "action", IsRequired = true, EmitDefaultValue = true)]
        public AccessManagementAttributeMatchModel Action { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AccessManagementRuleModel {\n");
            sb.Append("  RuleId: ").Append(RuleId).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  CreatedSuccessfully: ").Append(CreatedSuccessfully).Append("\n");
            sb.Append("  DelegatedByUserId: ").Append(DelegatedByUserId).Append("\n");
            sb.Append("  DelegatedByPartyId: ").Append(DelegatedByPartyId).Append("\n");
            sb.Append("  DelegatedDateTime: ").Append(DelegatedDateTime).Append("\n");
            sb.Append("  OfferedByPartyId: ").Append(OfferedByPartyId).Append("\n");
            sb.Append("  CoveredBy: ").Append(CoveredBy).Append("\n");
            sb.Append("  Resource: ").Append(Resource).Append("\n");
            sb.Append("  Action: ").Append(Action).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
