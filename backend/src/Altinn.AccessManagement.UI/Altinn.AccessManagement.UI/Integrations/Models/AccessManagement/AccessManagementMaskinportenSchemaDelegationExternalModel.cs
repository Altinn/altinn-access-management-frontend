/*
 * Altinn.AccessManagement
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;

namespace Altinn.AccessManagement.UI.Integrations.AccessManagement.Models
{
    /// <summary>
    /// AccessManagementMaskinportenSchemaDelegationExternalModel
    /// </summary>
    [DataContract(Name = "MaskinportenSchemaDelegationExternal")]
    public partial class AccessManagementMaskinportenSchemaDelegationExternalModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AccessManagementMaskinportenSchemaDelegationExternalModel" /> class.
        /// </summary>
        /// <param name="offeredByPartyId">offeredByPartyId.</param>
        /// <param name="offeredByName">offeredByName.</param>
        /// <param name="offeredByOrganizationNumber">offeredByOrganizationNumber.</param>
        /// <param name="coveredByPartyId">coveredByPartyId.</param>
        /// <param name="coveredByName">coveredByName.</param>
        /// <param name="coveredByOrganizationNumber">coveredByOrganizationNumber.</param>
        /// <param name="performedByUserId">performedByUserId.</param>
        /// <param name="created">created.</param>
        /// <param name="resourceId">resourceId.</param>
        public AccessManagementMaskinportenSchemaDelegationExternalModel(int offeredByPartyId = default(int), string offeredByName = default(string), string offeredByOrganizationNumber = default(string), int? coveredByPartyId = default(int?), string coveredByName = default(string), string coveredByOrganizationNumber = default(string), int performedByUserId = default(int), DateTime created = default(DateTime), string resourceId = default(string))
        {
            this.OfferedByPartyId = offeredByPartyId;
            this.OfferedByName = offeredByName;
            this.OfferedByOrganizationNumber = offeredByOrganizationNumber;
            this.CoveredByPartyId = coveredByPartyId;
            this.CoveredByName = coveredByName;
            this.CoveredByOrganizationNumber = coveredByOrganizationNumber;
            this.PerformedByUserId = performedByUserId;
            this.Created = created;
            this.ResourceId = resourceId;
        }

        /// <summary>
        /// Gets or Sets OfferedByPartyId
        /// </summary>
        [DataMember(Name = "offeredByPartyId", EmitDefaultValue = false)]
        public int OfferedByPartyId { get; set; }

        /// <summary>
        /// Gets or Sets OfferedByName
        /// </summary>
        [DataMember(Name = "offeredByName", EmitDefaultValue = true)]
        public string OfferedByName { get; set; }

        /// <summary>
        /// Gets or Sets OfferedByOrganizationNumber
        /// </summary>
        [DataMember(Name = "offeredByOrganizationNumber", EmitDefaultValue = true)]
        public string OfferedByOrganizationNumber { get; set; }

        /// <summary>
        /// Gets or Sets CoveredByPartyId
        /// </summary>
        [DataMember(Name = "coveredByPartyId", EmitDefaultValue = true)]
        public int? CoveredByPartyId { get; set; }

        /// <summary>
        /// Gets or Sets CoveredByName
        /// </summary>
        [DataMember(Name = "coveredByName", EmitDefaultValue = true)]
        public string CoveredByName { get; set; }

        /// <summary>
        /// Gets or Sets CoveredByOrganizationNumber
        /// </summary>
        [DataMember(Name = "coveredByOrganizationNumber", EmitDefaultValue = true)]
        public string CoveredByOrganizationNumber { get; set; }

        /// <summary>
        /// Gets or Sets PerformedByUserId
        /// </summary>
        [DataMember(Name = "performedByUserId", EmitDefaultValue = false)]
        public int PerformedByUserId { get; set; }

        /// <summary>
        /// Gets or Sets Created
        /// </summary>
        [DataMember(Name = "created", EmitDefaultValue = false)]
        public DateTime Created { get; set; }

        /// <summary>
        /// Gets or Sets ResourceId
        /// </summary>
        [DataMember(Name = "resourceId", EmitDefaultValue = true)]
        public string ResourceId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AccessManagementMaskinportenSchemaDelegationExternalModel {\n");
            sb.Append("  OfferedByPartyId: ").Append(OfferedByPartyId).Append("\n");
            sb.Append("  OfferedByName: ").Append(OfferedByName).Append("\n");
            sb.Append("  OfferedByOrganizationNumber: ").Append(OfferedByOrganizationNumber).Append("\n");
            sb.Append("  CoveredByPartyId: ").Append(CoveredByPartyId).Append("\n");
            sb.Append("  CoveredByName: ").Append(CoveredByName).Append("\n");
            sb.Append("  CoveredByOrganizationNumber: ").Append(CoveredByOrganizationNumber).Append("\n");
            sb.Append("  PerformedByUserId: ").Append(PerformedByUserId).Append("\n");
            sb.Append("  Created: ").Append(Created).Append("\n");
            sb.Append("  ResourceId: ").Append(ResourceId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
