/*
 * Altinn.AccessManagement
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;

namespace Altinn.AccessManagement.UI.Integrations.AccessManagement.Models
{
    /// <summary>
    /// AccessManagementMPDelegationExternalModel
    /// </summary>
    [DataContract(Name = "MPDelegationExternal")]
    public partial class AccessManagementMPDelegationExternalModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AccessManagementMPDelegationExternalModel" /> class.
        /// </summary>
        /// <param name="consumerOrg">consumerOrg.</param>
        /// <param name="supplierOrg">supplierOrg.</param>
        /// <param name="delegationSchemeId">delegationSchemeId.</param>
        /// <param name="scopes">scopes.</param>
        /// <param name="created">created.</param>
        /// <param name="resourceid">resourceid.</param>
        public AccessManagementMPDelegationExternalModel(string consumerOrg = default(string), string supplierOrg = default(string), Guid? delegationSchemeId = default(Guid?), List<string> scopes = default(List<string>), DateTime? created = default(DateTime?), string resourceid = default(string))
        {
            this.ConsumerOrg = consumerOrg;
            this.SupplierOrg = supplierOrg;
            this.DelegationSchemeId = delegationSchemeId;
            this.Scopes = scopes;
            this.Created = created;
            this.Resourceid = resourceid;
        }

        /// <summary>
        /// Gets or Sets ConsumerOrg
        /// </summary>
        [DataMember(Name = "consumer_org", EmitDefaultValue = true)]
        public string ConsumerOrg { get; set; }

        /// <summary>
        /// Gets or Sets SupplierOrg
        /// </summary>
        [DataMember(Name = "supplier_org", EmitDefaultValue = true)]
        public string SupplierOrg { get; set; }

        /// <summary>
        /// Gets or Sets DelegationSchemeId
        /// </summary>
        [DataMember(Name = "delegation_scheme_Id", EmitDefaultValue = true)]
        public Guid? DelegationSchemeId { get; set; }

        /// <summary>
        /// Gets or Sets Scopes
        /// </summary>
        [DataMember(Name = "scopes", EmitDefaultValue = true)]
        public List<string> Scopes { get; set; }

        /// <summary>
        /// Gets or Sets Created
        /// </summary>
        [DataMember(Name = "created", EmitDefaultValue = true)]
        public DateTime? Created { get; set; }

        /// <summary>
        /// Gets or Sets Resourceid
        /// </summary>
        [DataMember(Name = "resourceid", EmitDefaultValue = true)]
        public string Resourceid { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AccessManagementMPDelegationExternalModel {\n");
            sb.Append("  ConsumerOrg: ").Append(ConsumerOrg).Append("\n");
            sb.Append("  SupplierOrg: ").Append(SupplierOrg).Append("\n");
            sb.Append("  DelegationSchemeId: ").Append(DelegationSchemeId).Append("\n");
            sb.Append("  Scopes: ").Append(Scopes).Append("\n");
            sb.Append("  Created: ").Append(Created).Append("\n");
            sb.Append("  Resourceid: ").Append(Resourceid).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
