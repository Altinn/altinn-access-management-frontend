/*
 * Altinn.AccessManagement
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;

namespace Altinn.AccessManagement.UI.Integrations.AccessManagement.Models
{
    /// <summary>
    /// AccessManagementPersonModel
    /// </summary>
    [DataContract(Name = "Person")]
    public partial class AccessManagementPersonModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AccessManagementPersonModel" /> class.
        /// </summary>
        /// <param name="ssn">ssn.</param>
        /// <param name="name">name.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="middleName">middleName.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="telephoneNumber">telephoneNumber.</param>
        /// <param name="mobileNumber">mobileNumber.</param>
        /// <param name="mailingAddress">mailingAddress.</param>
        /// <param name="mailingPostalCode">mailingPostalCode.</param>
        /// <param name="mailingPostalCity">mailingPostalCity.</param>
        /// <param name="addressMunicipalNumber">addressMunicipalNumber.</param>
        /// <param name="addressMunicipalName">addressMunicipalName.</param>
        /// <param name="addressStreetName">addressStreetName.</param>
        /// <param name="addressHouseNumber">addressHouseNumber.</param>
        /// <param name="addressHouseLetter">addressHouseLetter.</param>
        /// <param name="addressPostalCode">addressPostalCode.</param>
        /// <param name="addressCity">addressCity.</param>
        /// <param name="dateOfDeath">dateOfDeath.</param>
        public AccessManagementPersonModel(string ssn = default(string), string name = default(string), string firstName = default(string), string middleName = default(string), string lastName = default(string), string telephoneNumber = default(string), string mobileNumber = default(string), string mailingAddress = default(string), string mailingPostalCode = default(string), string mailingPostalCity = default(string), string addressMunicipalNumber = default(string), string addressMunicipalName = default(string), string addressStreetName = default(string), string addressHouseNumber = default(string), string addressHouseLetter = default(string), string addressPostalCode = default(string), string addressCity = default(string), DateTime? dateOfDeath = default(DateTime?))
        {
            this.Ssn = ssn;
            this.Name = name;
            this.FirstName = firstName;
            this.MiddleName = middleName;
            this.LastName = lastName;
            this.TelephoneNumber = telephoneNumber;
            this.MobileNumber = mobileNumber;
            this.MailingAddress = mailingAddress;
            this.MailingPostalCode = mailingPostalCode;
            this.MailingPostalCity = mailingPostalCity;
            this.AddressMunicipalNumber = addressMunicipalNumber;
            this.AddressMunicipalName = addressMunicipalName;
            this.AddressStreetName = addressStreetName;
            this.AddressHouseNumber = addressHouseNumber;
            this.AddressHouseLetter = addressHouseLetter;
            this.AddressPostalCode = addressPostalCode;
            this.AddressCity = addressCity;
            this.DateOfDeath = dateOfDeath;
        }

        /// <summary>
        /// Gets or Sets Ssn
        /// </summary>
        [DataMember(Name = "ssn", EmitDefaultValue = true)]
        public string Ssn { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name = "firstName", EmitDefaultValue = true)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets MiddleName
        /// </summary>
        [DataMember(Name = "middleName", EmitDefaultValue = true)]
        public string MiddleName { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name = "lastName", EmitDefaultValue = true)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets TelephoneNumber
        /// </summary>
        [DataMember(Name = "telephoneNumber", EmitDefaultValue = true)]
        public string TelephoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets MobileNumber
        /// </summary>
        [DataMember(Name = "mobileNumber", EmitDefaultValue = true)]
        public string MobileNumber { get; set; }

        /// <summary>
        /// Gets or Sets MailingAddress
        /// </summary>
        [DataMember(Name = "mailingAddress", EmitDefaultValue = true)]
        public string MailingAddress { get; set; }

        /// <summary>
        /// Gets or Sets MailingPostalCode
        /// </summary>
        [DataMember(Name = "mailingPostalCode", EmitDefaultValue = true)]
        public string MailingPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets MailingPostalCity
        /// </summary>
        [DataMember(Name = "mailingPostalCity", EmitDefaultValue = true)]
        public string MailingPostalCity { get; set; }

        /// <summary>
        /// Gets or Sets AddressMunicipalNumber
        /// </summary>
        [DataMember(Name = "addressMunicipalNumber", EmitDefaultValue = true)]
        public string AddressMunicipalNumber { get; set; }

        /// <summary>
        /// Gets or Sets AddressMunicipalName
        /// </summary>
        [DataMember(Name = "addressMunicipalName", EmitDefaultValue = true)]
        public string AddressMunicipalName { get; set; }

        /// <summary>
        /// Gets or Sets AddressStreetName
        /// </summary>
        [DataMember(Name = "addressStreetName", EmitDefaultValue = true)]
        public string AddressStreetName { get; set; }

        /// <summary>
        /// Gets or Sets AddressHouseNumber
        /// </summary>
        [DataMember(Name = "addressHouseNumber", EmitDefaultValue = true)]
        public string AddressHouseNumber { get; set; }

        /// <summary>
        /// Gets or Sets AddressHouseLetter
        /// </summary>
        [DataMember(Name = "addressHouseLetter", EmitDefaultValue = true)]
        public string AddressHouseLetter { get; set; }

        /// <summary>
        /// Gets or Sets AddressPostalCode
        /// </summary>
        [DataMember(Name = "addressPostalCode", EmitDefaultValue = true)]
        public string AddressPostalCode { get; set; }

        /// <summary>
        /// Gets or Sets AddressCity
        /// </summary>
        [DataMember(Name = "addressCity", EmitDefaultValue = true)]
        public string AddressCity { get; set; }

        /// <summary>
        /// Gets or Sets DateOfDeath
        /// </summary>
        [DataMember(Name = "dateOfDeath", EmitDefaultValue = true)]
        public DateTime? DateOfDeath { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AccessManagementPersonModel {\n");
            sb.Append("  Ssn: ").Append(Ssn).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  MiddleName: ").Append(MiddleName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  TelephoneNumber: ").Append(TelephoneNumber).Append("\n");
            sb.Append("  MobileNumber: ").Append(MobileNumber).Append("\n");
            sb.Append("  MailingAddress: ").Append(MailingAddress).Append("\n");
            sb.Append("  MailingPostalCode: ").Append(MailingPostalCode).Append("\n");
            sb.Append("  MailingPostalCity: ").Append(MailingPostalCity).Append("\n");
            sb.Append("  AddressMunicipalNumber: ").Append(AddressMunicipalNumber).Append("\n");
            sb.Append("  AddressMunicipalName: ").Append(AddressMunicipalName).Append("\n");
            sb.Append("  AddressStreetName: ").Append(AddressStreetName).Append("\n");
            sb.Append("  AddressHouseNumber: ").Append(AddressHouseNumber).Append("\n");
            sb.Append("  AddressHouseLetter: ").Append(AddressHouseLetter).Append("\n");
            sb.Append("  AddressPostalCode: ").Append(AddressPostalCode).Append("\n");
            sb.Append("  AddressCity: ").Append(AddressCity).Append("\n");
            sb.Append("  DateOfDeath: ").Append(DateOfDeath).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
