body {
  margin: 0;
}

:root {
  font-family: 'Inter', sans-serif;
  --backgroundColorA2: #1eadf7;
  --backgroundColorA3: #e9f5ff;

  --a2-semantic-surface-action-first-no_fill: #00315d;

  --a2-color-success-border-default: #2d9257;
  --a2-color-success-surface-default: #d1f4e1;
  --a2-color-success-text-default: #1e2b3c;
  --a2-color-success-surface-hover: #8be4b5;
  --a2-color-success-surface-active: #8be4b5;

  --a2-semantic-surface-success-default: #118849;
  --a2-semantic-text-neutral-on_inverted: #1e2b3c;

  --a2-color-warning-border-default: #e9bf89;
  --a2-color-warning-surface-default: #fffbe6;
  --a2-color-neutral-text-default: var(--a2-semantic-text-neutral-on_inverted);
  --a2-color-warning-surface-hover: #ffed83;
  --a2-color-warning-surface-active: #ffed83;

  --a2-color-danger-border-default: #de3c51;
  --a2-color-danger-surface-default: #f9d5db;
  --a2-color-neutral-text-default: var(--a2-semantic-text-neutral-on_inverted);
  --a2-color-danger-surface-hover: #f3abb6;
  --a2-color-danger-surface-active: #f3abb6;
  --a2-semantic-surface-danger-default: #e02e49;

  --a2-color-neutral-border-default: #d2d5d8;
  --a2-color-neutral-surface-default: #f4f5f6;
  --a2-color-neutral-surface-hover: #e9eaec;
  --a2-color-neutral-surface-active: #e9eaec;
  --a2-color-neutral-text-default: var(--a2-semantic-text-neutral-on_inverted);
}

body {
  margin: 0;
}

@supports (font-variation-settings: normal) {
  :root {
    font-family: 'Inter', sans-serif;
  }
}

.backgroundColor {
  background-color: #1eadf7;
}

.spinnerContainer {
  margin-top: 1rem;
  display: flex;
  justify-content: center;
}

.unstyledList {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

:root {
  --ds-size-base: 18;
  --ds-size-step: 4;
  --ds-size-0: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 0), 0.0625rem);
  --ds-size-1: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 1), 0.0625rem);
  --ds-size-2: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 2), 0.0625rem);
  --ds-size-3: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 3), 0.0625rem);
  --ds-size-4: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 4), 0.0625rem);
  --ds-size-5: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 5), 0.0625rem);
  --ds-size-6: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 6), 0.0625rem);
  --ds-size-7: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 7), 0.0625rem);
  --ds-size-8: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 8), 0.0625rem);
  --ds-size-9: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 9), 0.0625rem);
  --ds-size-10: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 10), 0.0625rem);
  --ds-size-11: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 11), 0.0625rem);
  --ds-size-12: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 12), 0.0625rem);
  --ds-size-13: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 13), 0.0625rem);
  --ds-size-14: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 14), 0.0625rem);
  --ds-size-15: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 15), 0.0625rem);
  --ds-size-18: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 18), 0.0625rem);
  --ds-size-22: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 22), 0.0625rem);
  --ds-size-26: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 26), 0.0625rem);
  --ds-size-30: round(down, calc(var(--ds-size-step) / var(--ds-size-base) * 1em * 30), 0.0625rem);
}
