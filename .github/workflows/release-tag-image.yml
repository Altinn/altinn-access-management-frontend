on:
  workflow_dispatch:
    inputs:
      release_version:
        type: string
        description: 'version to release. Ex: v4.3.2'
        required: true
        default: 'v'
      commit_sha:
        type: string
        description: 'full commit sha of the image'
        required: true
      short_commit_sha:
        type: string
        description: 'full commit sha of the image'
        required: true
      commit_message:
        type: string
        description: 'tag message'
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: acn-dgopa/altinn-access-management-frontend
  CONTAINER_APP_CONTAINER_NAME: altinnaccessmanagementui
  CONTAINER_APP_NAME: altinnaccessmanagementui-app
  CONTAINER_APP_RESOURCE_GROUP_NAME: am-ui-rg

jobs:
  tag_release:
    name: Tag  a commit as Release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      issues: write
      packages: write
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: setup git config
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config user.name "dhanasneham@gmail.com"
          git config user.email ""
          git config -l | grep url

      - name: Tag a commit
        run: |
          git tag -a ${{ inputs.release_version }} -m '${{ inputs.commit_message }}' ${{ inputs.short_commit_sha }}
          git push origin tag ${{ inputs.release_version }}
      
      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.release_version }}
          release_name: Release ${{ inputs.release_version }}
          draft: false
          prerelease: false
          
      - name: Login to GHCR
        uses: docker/login-action@v2.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: version
        uses: battila7/get-version-action@v2
      - name: Add Semantic Version tag to Docker Image
        uses: shrink/actions-docker-registry-tag@v3
        with:
          registry: ${{ env.REGISTRY }}
          repository: '${{ env.IMAGE_NAME }}'
          target: '${{ inputs.commit_sha }}'
          tags: '${{ inputs.release_version }}'
